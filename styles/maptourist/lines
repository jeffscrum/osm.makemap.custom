# -------------------------------------------------------------------
# This is the default mkgmap style file for converting OSM ways
# into Garmin lines.
# Any line prefaced with # is a comment and will not be applied.
# Each line is a rule, of the generalised format:
#  OSM_tag(s)_to_match  [Garmin_type_code resolution]
# See http://wiki.openstreetmap.org/wiki/Mkgmap/help/style_rules
# and http://wiki.openstreetmap.org/wiki/Mkgmap/help/Custom_styles
# for more information.

# убираем кавычки из всех названий
name~'.*("+).*' {set name='${name|subst:["+]~>}'}
name~'.*(\u00ab+).*' {set name='${name|subst:[\u00ab+]~>}'}
name~'.*(\u00bb+).*' {set name='${name|subst:[\u00bb+]~>}'}
description~'.*("+).*' {set description='${description|subst:["+]~>}'}
description~'.*(\u00ab+).*' {set description='${description|subst:[\u00ab+]~>}'}
description~'.*(\u00bb+).*' {set description='${description|subst:[\u00bb+]~>}'}
operator~'.*("+).*' {set operator='${operator|subst:["+]~>}'}
operator~'.*(\u00ab+).*' {set operator='${operator|subst:[\u00ab+]~>}'}
operator~'.*(\u00bb+).*' {set operator='${operator|subst:[\u00bb+]~>}'}
brand~'.*("+).*' {set brand='${brand|subst:["+]~>}'}
brand~'.*(\u00ab+).*' {set brand='${brand|subst:[\u00ab+]~>}'}
brand~'.*(\u00bb+).*' {set brand='${brand|subst:[\u00bb+]~>}'}
addr:street~'.*("+).*' {set addr:street='${addr:street|subst:["+]~>}'}
addr:street~'.*(\u00ab+).*' {set addr:street='${addr:street|subst:[\u00ab+]~>}'}
addr:street~'.*(\u00bb+).*' {set addr:street='${addr:street|subst:[\u00bb+]~>}'}
addr:place~'.*("+).*' {set addr:place='${addr:place|subst:["+]~>}'}
addr:place~'.*(\u00ab+).*' {set addr:place='${addr:place|subst:[\u00ab+]~>}'}
addr:place~'.*(\u00bb+).*' {set addr:place='${addr:place|subst:[\u00bb+]~>}'}

# Description to Name
# копия из /name, но не set. Иначе задвоения в полигонах!
#(name=* & description=*)|(name=* & description!=*)|(name!=* & description=*) 
#	{ name '${name} (${description})'|'${name}'|'${description}' }

addr:housenumber=* {set mkgmap:execute_finalize_rules=true}

include 'inc/status';
# сокращаем статусные части названий улиц (пока отлючено)
# name=* {  name '${name|subst:улица=> ул.
#			|subst:переулок=> пер.
#			|subst:проспект=> пр-т
#			|subst:проезд=> пр-д
#			|subst:разъезд=> раз.
#			|subst:тракт=> тр-т
#			|subst:площадь=> пл.
#			|subst:имени=> им.
#			|subst:бульвар=> бл-р
#			|subst:шоссе=> ш.
#			|subst:дорога=> дор.
#			|subst:тупик=> туп.
#			|subst:микрорайон=> мкр
#			|subst:аллея=> алл.
#			|subst:линия=> лин.
#			|subst:набережная=> наб. }'
#	 }

### taxi type is used for river routing
highway=* {add taxi=no}

# Hide proposed ways
# убираем из обработки все планируемые дороги, ж/д, мосты и т.д.
(highway=proposed | highway=proposal | highway=planned | highway ~ '.*proposed.*' 
	| railway=proposed | bridge=proposed | proposed=*) 
	{deletealltags}
#	{delete highway; delete junction;delete oneway; delete rail; delete bridge; delete tunnel}

# Hide removed ways
(highway=razed | highway=dismantled) {deletealltags}
# Hide abandoned ways. Abandoned highways have some evidence of their former existence but are no longer used. These
# abandoned highways could be useful in topographical maps.
# https://wiki.openstreetmap.org/wiki/Key:abandoned:
((abandoned:highway=* & highway!=*) | highway=abandoned) {deletealltags}
# Hide other non-existent ways
(highway=unbuilt | highway=neverbuilt | highway=rejected | highway ~ 'x-.*') {delete highway;delete junction}
# Remove highway tag from ways which are not suitable for routing
highway=traffic_signals | highway=junction | highway=island | highway=centre_line | highway=traffic_island | highway=stopline {delete highway} 
highway=piste | highway=ski {delete highway}
highway=no | highway=none {delete highway}
 
# Hide unaccessible tunnels
#highway=* & tunnel=yes & (access=private|access=no)
#	& foot!=* & bicycle!=* {delete highway;delete junction}

# удаляем мост если bridge=no
bridge=no	{delete highway; delete rail; delete bridge}

# See line #582
# highway=* & oneway!=yes & name=* & ref=* & is_in('place','*',any)=true {delete ref}

# Assign the street name for house number search
highway=* & name=* { set mkgmap:street='${name}' }

####### Language secific translations
if (mkgmap:option:code-page=1251) 
then
	# платная
	highway=* & toll=yes 
	{ set name='${name} (платн.)' | 'платная' }
	# грейдер
	highway=* & surface=compacted & highway!=pedestrian & highway!=footway & highway!=path
	{ set name='${name} (грейдер)' | 'грейдер' }
	# гравийка
	highway=* & surface=gravel& highway!=pedestrian & highway!=footway & highway!=path
	{ set name='${name} (гравийка)' | 'гравийка' }
	# бетонка
	highway=* & surface=concrete & highway!=pedestrian & highway!=footway & highway!=path
	{ set name='${name} (бетонка)' | 'бетонка' }
	highway=* & surface=concrete:plates & highway!=pedestrian & highway!=footway & highway!=path
	{ set name='${name} (бетонка)' | 'бетонка' }
	## недейств. ж/д (добавил в конец railway=disused)
	railway=abandoned | (railway=* & abandoned=yes) | railway=disused | (disused:railway=rail & railway!=disused)
	{ name '${name} (недейств. ж/д)' | 'недейств. ж/д' }
	## недейств. ужд
	railway=narrow_gauge & disused=yes 
	{ name '${name} (недейств. ужд)' | 'недейств. ужд' }
	## узкоколейка
	railway=narrow_gauge 
	{ name '${name} (ужд)' | 'ужд' }
end

if (mkgmap:option:code-page=1250) 
then
	# платная
	highway=* & toll=yes 
	{ set name='${name} (toll)' | 'toll road' }
	# грейдер
	highway=* & surface=compacted & highway!=pedestrian & highway!=footway & highway!=path
	{ set name='${name} (comapcted)' | 'comapcted' }
	# гравийка
	highway=* & surface=gravel& highway!=pedestrian & highway!=footway & highway!=path
	{ set name='${name} (gravel)' | 'gravel' }
	# бетонка
	highway=* & surface=concrete & highway!=pedestrian & highway!=footway & highway!=path
	{ set name='${name} (concrete)' | 'concrete' }
	highway=* & surface=concrete:plates & highway!=pedestrian & highway!=footway & highway!=path
	{ set name='${name} (concrete)' | 'concrete' }
	## недейств. ж/д (добавил в конец railway=disused)
	railway=abandoned | (railway=* & abandoned=yes) | railway=disused | (disused:railway=rail & railway!=disused)
	{ name '${name} (disused rail)' | 'disused rail' }
	## недейств. ужд
	railway=narrow_gauge & disused=yes 
	{ name '${name} (disused narrow rail)' | 'disused narrow rail' }
	## узкоколейка
	railway=narrow_gauge 
	{ name '${name} (narrow rail)' | 'narrow rail' }
end
####### Language specific translations

highway=* & amenity=fuel | amenity=fuel & area=yes 
	{delete highway; set highway=rest_area; set area=yes}

(aeroway=runway | aeroway=stopway) & highway!=* & is_closed()=false {name '${ref}'} [0x27 resolution 19]
(aeroway=taxiway | aeroway=taxilane) & highway!=* & is_closed()=false {name '${ref}'} [0x10f06 resolution 22]

# Mark highways with the toll flag
highway=* & (toll=yes|toll=true) { set mkgmap:toll=yes }

# mark multipolygons as area
# highway=* & mkgmap:mp_created=true {add area=yes}
(highway=* | waterway=* | man_made=*) & mkgmap:mp_created=true {add area=yes}

#####

# Validation-like checks (uncomment to enable)
#highway=motorway_link & oneway!=yes & oneway!=no { echo "motorway_link lacks oneway" }
highway=motorway      { add oneway=yes; add mkgmap:numbers=false }
highway=motorway_link { add mkgmap:numbers=false }

# дополнительный тип линии односторонних дорог со стрелками
(oneway=yes | oneway=-1) & 
	(highway=motorway   | highway=motorway_link 
	| highway=trunk     | highway=trunk_link
	| highway=primary   | highway=primary_link  
	| highway=secondary | highway=secondary_link
	| highway=tertiary  | highway=tertiary_link 
	| highway=unclassified 
	| highway=residential)
	  {addlabel '${name}' } [0x10f11 resolution 22 continue]
(oneway=yes | oneway=-1)  & highway=* & motorroad=yes 
	  {addlabel '${name}' } [0x10f11 resolution 22 continue]

(oneway=yes | oneway=-1)
	& highway!=motorway  & highway!=motorway_link 
	& highway!=trunk     & highway!=trunk_link
	& highway!=primary   & highway!=primary_link  
	& highway!=secondary & highway!=secondary_link
	& highway!=tertiary  & highway!=tertiary_link
	& highway!=unclassified 
	& highway!=residential
	& (highway=* & motorroad!=yes) 
	  {addlabel '${name}' } [0x10f11 resolution 24 continue]
junction=roundabout & highway!=* 
	  {addlabel '${name}' } [0x10f11 resolution 24 continue]

# Добавляем запреты проезда для машин
highway=* & motorcar=no | highway=* & vehicle=no | highway=* & motorcar=private | highway=* & motor_vehicle=no | highway=* & access=private {add motorcar=no; add taxi=no; add hgv=no}

# зимники и ледовые переправы
highway=* & winter_road=yes & ice_road!=yes | highway=* & ice_road=yes & winter_road!=yes [0x10 road_class=1 road_speed=3 resolution 18]

# Дамбы и насыпи
man_made=embankment & embankment=yes {delete embankment}
embankment=yes & is_closed()=false & area!=yes [0x10107 resolution 22 continue]
embankment=yes & highway!=* & railway!=* & barrier!=* & is_closed()=false [0x1010b resolution 22]
embankment=yes & is_closed()=true [0x10108 resolution 22]
man_made=embankment [0x10108 resolution 22 continue]
man_made=breakwater & is_closed()=false & area!=yes [0x10107 resolution 22 continue]
man_made=breakwater & highway!=* & is_closed()=false & area!=yes [0x1010b resolution 22]
man_made=breakwater & (is_closed()=true | area=yes) [0x10108 resolution 22 continue]
(waterway=dam | man_made=dyke | waterway=weir) & is_closed()=false & area!=yes [0x10109 resolution 22 continue]
(waterway=dam | man_made=dyke | waterway=weir) & (is_closed()=true | area=yes) [0x1010c resolution 22 continue]
cutting=yes & (highway=motorway
	| highway=trunk
	| highway=primary
	| highway=secondary
	| highway=tertiary 
	| highway~'.*_link'
	| railway=*) [0x1010a resolution 22 continue]

# трубопроводы
man_made=pipeline {name '${name}' | '${operator}'} [0x28 resolution 18]

# пирсы
man_made=pier & highway=footway {delete highway}
man_made=pier & is_closed()=false & area!=yes [0x10f1c resolution 24]

# линии мостов дополнительно к дорогам
(bridge=yes | bridge=true) & highway!=pedestrian & highway!=footway & highway!=path
	& area!=yes [0x10f16 resolution 24 continue]
# & (railway!=subway | waterway!=* | area!=yes) Так почему-то не работает. К мостам добавляется контур.

# пешеходные мосты
(bridge=yes | bridge=true) & (highway=pedestrian | highway=footway | highway=path)
	& area!=yes [0x10f18 resolution 24 continue]

# линии тоннелей дополнительно к дорогам
(tunnel=culvert | tunnel=yes | tunnel=true) 
	& railway!=subway 
	& railway!=construction 
	& area!=yes [0x10f1a resolution 24 continue]

# линии бродов тем же типом, что и track
highway=ford | highway=* & ford=yes [0x0a road_class=0 road_speed=0 resolution 21] 

# Лесополоса
natural=tree_row [0x10106 resolution 22]

natural=cliff | natural=earth_bank [0x10f17 resolution 21 continue]
natural=ridge | natural=arete [0x10f1e resolution 21 continue]

## Convert generic path to most specific
highway=path & (bicycle=designated|bicycle=official) {set highway=cycleway }
highway=path & (horse=designated|horse=official) {set highway=bridleway }
highway=path & (foot=designated|foot=official) {set highway=footway }
#####

# Disable dead-end-checks for unaccessible oneways
highway=* & oneway=yes & (access=private|access=no)
{add mkgmap:dead-end-check=false}

# start of rules for process-exits and process-destination options
# which may add info to a part of these highway=*_link roads:
# motorway_link, trunk_link, primary_link, secondary_link, tertiary_link
# build destination hint 
mkgmap:dest_hint=*
  { set dest_hint = '${destination:ref|subst: =>} ${mkgmap:dest_hint|subst:;=> |subst:/=> }' |
         '${ref|subst: =>} ${mkgmap:dest_hint|subst:;=> |subst:/=> }' | 
         '${mkgmap:dest_hint|subst:;=> |subst:/=> }';
       }
# build exit hint 
mkgmap:exit_hint=true 
  { set exit_hint = 'Exit ${mkgmap:exit_hint_ref} ${mkgmap:exit_hint_name}' | 
         'Exit ${mkgmap:exit_hint_ref} ${mkgmap:exit_hint_exit_to}' | 
         'Exit ${mkgmap:exit_hint_exit_to}' |
         'Exit ${mkgmap:exit_hint_name}' |
         'Exit ${mkgmap:exit_hint_ref}';
       }
  
# use destination hint and/or exit hint to build name              
(mkgmap:exit_hint=true | mkgmap:dest_hint=*)
  {	name '${exit_hint} ${dest_hint}' | 	'${dest_hint}' | 		'${exit_hint}' }
# end of rules for process-exits and process-destination options

# Flag paved roads
highway=* & (
   surface=asphalt        | surface=paved          | surface=sett | 
   surface=concrete       | surface=concrete:lanes | surface=concrete:plates | 
   surface=paving_stones  | surface=cobblestone    | surface=unhewn_cobblestone |
   surface=cobblestone:flattened  | surface=metal  | surface=wood) { set mkgmap:unpaved=0 }
highway=* & tracktype=grade1 & surface!=* { set mkgmap:unpaved=0 }

# Flag unpaved roads.
highway=* & mkgmap:unpaved!=0 & (  
   surface=unpaved | surface=compacted | surface=dirt        | surface=fine_gravel |
   surface=earth   | surface=grass     | surface=grass_paver | surface=woodchips |
   surface=gravel  | surface=grit      | surface=ground      | surface=mud |
   surface=pebblestone                 | surface=sand        | surface=unpaved | surface=salt |
	mtb:scale=* | 
    tracktype ~ 'grade[2-6]') { add mkgmap:unpaved=1 }

highway=* & (
    mtb:scale ~ '[2-6].' |
    sac_scale ~ '.*(mountain|alpine)_hiking' |
    sport=via_ferrata) { set mkgmap:unpaved=1 }
(highway=bridleway | highway=path | highway=track) & mkgmap:unpaved!=0 { add mkgmap:unpaved=1 }
(highway=unsurfaced | highway=via_ferrata) { set mkgmap:unpaved=1 }

highway=* & mkgmap:unpaved!=1 & smoothness ~ '.*(bad|horrible|impassable)'  { add mkgmap:road-speed = '-2' } 

## Там где surface важнее класса
mkgmap:unpaved=1 & highway=primary
[0x12 road_class=1 road_speed=2 resolution 18]
mkgmap:unpaved=1 & highway=secondary
[0x12 road_class=1 road_speed=2 resolution 18]
mkgmap:unpaved=1 & highway=tertiary
[0x13 road_class=1 road_speed=2 resolution 19]
mkgmap:unpaved=1 & highway=unclassified
[0x13 road_class=1 road_speed=2 resolution 19]
#####

# Good ways without relation
highway=* & mkgmap:fast_road!=* & (int_ref=* | network=e-road | network=AH | network=TAH | network=US:I | network=US:US) {add mkgmap:fast_road=yes}
# Not best for car routing
highway=* & (access=hov | hov=designated | oneway=reversible) {set mkgmap:road-class=-2; set mkgmap:road-speed=-2; delete mkgmap:fast_road}

# Convert generic path to most specific
highway=footway & snowplowing!=no
& (bicycle=yes|bicycle=designated|bicycle=permissive|bicycle=official)
{set highway=cycleway; set bicycle=yes; set foot=yes}
highway=path & snowplowing!=no
& (bicycle=designated|bicycle=permissive|bicycle=official)
{set highway=cycleway; set bicycle=yes}
highway=path & (horse=designated|horse=permissive|horse=official)
{set highway=bridleway; set horse=yes}

leisure=marina [0x10f1b resolution 24 continue]

leisure=track & area!=yes {name '${name} (${sport})' | '${name}'} [0x16 road_class=0 road_speed=0 resolution 22 continue]

(man_made=piste:halfpipe) & area!=yes
{add highway=footway; name '${ref} ${name}' | '${ref}' | '${name}' }

# Roundabouts
junction=roundabout & (highway=trunk | highway=trunk_link) [0x0c road_class=4 road_speed=2 resolution 21]
#junction=roundabout & (highway=trunk | highway=trunk_link) [0x10801 resolution 18]

junction=roundabout & (highway=primary | highway=primary_link) & mkgmap:fast_road=yes [0x0c road_class=4 road_speed=2 resolution 21]
#junction=roundabout & (highway=primary | highway=primary_link) & mkgmap:fast_road=yes [0x10802 resolution 19]

junction=roundabout & (highway=primary | highway=primary_link) [0x0c road_class=3 road_speed=2 resolution 21]
#junction=roundabout & (highway=primary | highway=primary_link) [0x10802 resolution 19]

junction=roundabout & (highway=secondary | highway=secondary_link) & mkgmap:fast_road=yes [0x0c road_class=3 road_speed=2 resolution 21]
#junction=roundabout & (highway=secondary | highway=secondary_link) & mkgmap:fast_road=yes [0x10803 resolution 19]

junction=roundabout & (highway=secondary | highway=secondary_link) [0x0c road_class=2 road_speed=2 resolution 21]
#junction=roundabout & (highway=secondary | highway=secondary_link) [0x10803 resolution 19]

junction=roundabout & (highway=tertiary | highway=tertiary_link) [0x0c road_class=1 road_speed=1 resolution 21]
#junction=roundabout & (highway=tertiary | highway=tertiary_link) [0x10804 resolution 19]

junction=roundabout & (highway=unclassified | highway=minor ) [0x0c road_class=1 road_speed=1 resolution 21]
junction=roundabout & highway=residential [0x0c road_class=0 road_speed=1 resolution 22]
junction=roundabout & highway=* [0x0c road_class=0 road_speed=1 resolution 21]

# Ways that may or may not be useable

# Treat ways under construction almost as highway=path, see also extra rule in inc/access
highway=construction { add mkgmap:dead-end-check = false; } 
#[0x16 road_class=0 road_speed=0 resolution 23]
# highway=construction | highway=* & construction=* [0x0f road_class=0 road_speed=1 resolution 21 continue]
highway=construction | highway=* & construction=* [0x10f19 resolution 21 continue]
## Treat disused ways as highway=service, but at lower road_speed.
highway=* & disused=yes [0x0a road_class=0 road_speed=1 resolution 21 continue]

# Lower the road speed of ways under some construction.
highway=* & construction=* & maxspeed!=* { add mkgmap:road-speed = '-1' }
# Lower the road speed of disused ways.
highway=* & disused=yes & maxspeed!=* { add mkgmap:road-speed = '-2' }
## Treat disused ways as highway=service, but at lower road_speed.
highway=* & disused=yes [0x0a road_class=0 road_speed=1 resolution 21 continue]

# Ways sorted roughly by descending order of class
highway=motorway & mkgmap:fast_road=yes [0x01 road_class=4 road_speed=7 resolution 16]
highway=motorway [0x01 road_class=4 road_speed=7 resolution 16]
highway=motorway_link & (mkgmap:exit_hint=true | mkgmap:dest_hint=*) [0x09 road_class=4 road_speed=2 resolution 21]
highway=motorway_link [0x09 road_class=4 road_speed=2 resolution 21]

highway=trunk & mkgmap:fast_road=yes [0x02 road_class=4 road_speed=5 resolution 16]
highway=trunk [0x02 road_class=4 road_speed=5 resolution 16]
highway=trunk_link & (mkgmap:exit_hint=true | mkgmap:dest_hint=*) [0x09 road_class=4 road_speed=2 resolution 21]
highway=trunk_link [0x09 road_class=4 road_speed=2 resolution 21]
highway=* & motorroad=yes [0x02 road_class=4 road_speed=4 resolution 16]
highway=primary & mkgmap:fast_road=yes [0x03 road_class=4 road_speed=4 resolution 18]
highway=primary [0x03 road_class=3 road_speed=4 resolution 18]
highway=primary_link & (mkgmap:exit_hint=true | mkgmap:dest_hint=*) & mkgmap:fast_road=yes [0x09 road_class=4 road_speed=1 resolution 21]
highway=primary_link & (mkgmap:exit_hint=true | mkgmap:dest_hint=*) [0x09 road_class=3 road_speed=1 resolution 21]
highway=primary_link & mkgmap:fast_road=yes [0x09 road_class=4 road_speed=1 resolution 21]
highway=primary_link [0x09 road_class=3 road_speed=1 resolution 21]
highway=secondary & mkgmap:fast_road=yes [0x04 road_class=3 road_speed=3 resolution 18]
highway=secondary [0x04 road_class=2 road_speed=3 resolution 18]
highway=secondary_link & mkgmap:fast_road=yes [0x09 road_class=3 road_speed=1 resolution 21]
highway=secondary_link [0x09 road_class=2 road_speed=1 resolution 21]
highway=tertiary [0x11 road_class=1 road_speed=3 resolution 19]
highway=tertiary_link [0x09 road_class=1 road_speed=1 resolution 21]
highway=minor [0x06 road_class=1 road_speed=3 resolution 19]
highway=unclassified [0x06 road_class=0 road_speed=3 resolution 19]

# Some countries allow, others disallow bicycling on pedestrian streets.
# To allow bicycling, add 'add bicycle=yes'
highway=pedestrian & area!=yes [0x16 road_class=0 road_speed=0 resolution 22]
highway=living_street & area!=yes [0x06 road_class=0 road_speed=0 resolution 22]
highway=residential & area!=yes [0x0d road_class=0 road_speed=2 resolution 22]
highway=bridleway [0x16 road_class=0 road_speed=0 resolution 22]
highway=byway [0x16 road_class=0 road_speed=0 resolution 22]
highway=raceway {setaccess 'no'} [0x07 road_class=0 road_speed=7 resolution 22]

highway=service & service=parking_aisle [0x07 road_class=0 road_speed=0 resolution 24]
highway=service & service=emergency_access [0x07 road_class=0 road_speed=0 resolution 24]
highway=service & service=drive-through [0x07 road_class=0 road_speed=0 resolution 24]
highway=service & (service=alley|service=driveway) [0x07 road_class=0 road_speed=0 resolution 24]
highway=service & living_street=yes & area!=yes [0x07 road_class=0 road_speed=0 resolution 24] 
highway=service & area!=yes [0x07 road_class=0 road_speed=2 resolution 22]

highway=cycleway [0x16 road_class=0 road_speed=1 resolution 22]

highway=path & area!=yes [0x16 road_class=0 road_speed=0 resolution 22]
(highway=footway|highway=steps|ford=stepping_stones) & area!=yes [0x16 road_class=0 road_speed=0 resolution 24]
highway=track & (motor_vehicle=no|motorcar=no) [0x16 road_class=0 road_speed=0 resolution 22]
#highway=track [0x0a road_class=0 road_speed=1 resolution 22]
highway=track & tracktype!=grade1 {add mkgmap:display_name = '${name}'} [0x0a road_class=0 road_speed=0 resolution 21]
highway=track & tracktype=grade1 {add mkgmap:display_name = '${name}'} [0x07 road_class=1 road_speed=1 resolution 21]
highway=unsurfaced [0x0a road_class=0 road_speed=1 resolution 21]
highway=road { add mkgmap:dead-end-check = false} [0x05 road_class=0 road_speed=1 resolution 21]

# Mop up any unrecognised highway types
highway=* & area!=yes [0x07 road_class=0 road_speed=0 resolution 22] 

# natural=coastline [0x15 resolution 16 continue]

#power=line [0x29 resolution 21]
power=line | power=minor_line {name '${name} ${ref} (${voltage}v)' | '${name} (${voltage}v)' | '${ref} (${voltage}v)'
	   | '${name} ${ref}' | '${name}' | '${ref}' | '${voltage}v'}
power=line  	 | (power=line & man_made=cutline) 	 [0x29 resolution 21]
power=minor_line | (power=minor_line & man_made=cutline) [0x29 resolution 22]
man_made=cutline & (power!=line | power!=minor_line) [0x0e road_class=0 road_speed=0 resolution 21]

## Разделяем ЖД с трамваями и выносим их в кастомные типы

#railway=abandoned [0x0a road_class=0 road_speed=1 resolution 22]
railway=* & disused=yes [0x0b road_class=0 road_speed=0 resolution 21]
railway=abandoned | railway=disused  | (disused:railway=rail & railway!=disused) [0x0b road_class=0 road_speed=0 resolution 21]
railway=narrow_gauge [0x10f05 resolution 18]
railway=rail & service=*
	{ name '${name} (${railway:track_ref})' 
		| '${name} (${ref})' 
		| '${railway:track_ref}' 
		| '${ref}' 
		| '${name}' } [0x10f05 resolution 24]
railway=rail & service!=*
	{ name '${name} (${railway:track_ref})' 
		| '${name} (${ref})' 
		| '${railway:track_ref}' 
		| '${ref}' 
		| '${name}' } [0x10f13 resolution 17]
railway=tram	[0x10f14 resolution 22 continue]
railway=light_rail & !(layer<0) [0x10f14 resolution 22]
railway=monorail [0x10f14 resolution 22 continue]
railway=miniature [0x10f05 resolution 22]
railway=subway & !(layer<0) [0x14 resolution 22]
# railway=platform & area!=yes [0x16 road_class=0 road_speed=0 resolution 24 continue]
(highway = platform | railway = platform ) & !(area = yes | is_closed() = true 
	| tunnel = yes | location = underground)  
	[0x16 road_class=0 road_speed=0 resolution 24 continue]

# Railway lines, note that many devices display type 0x14 only at resolution 24 
#(railway=rail | railway=tram | railway=disused | railway=subway | railway=narrow_gauge | railway=light_rail | railway=preserved) & !(tunnel=yes) [0x14 resolution 22]
(railway=preserved) & !(tunnel=yes) [0x14 resolution 22]

# (man_made=cable|(man_made=* & man_made ~ '.*pipe.*')) & area!=yes &
# tunnel!=yes & location != underground
# {name '${name} (${operator})' | '${name}' | '${operator}' }
# [0x28 resolution 23]

# The following boundary styles are after the highway rules because ways
# are frequently tagged with both and we want the highway to take priority.
## Границы с названиями регионов берутся из отношения, 
## а города из имени границы (полигона) с тегом name=*
boundary=administrative & place!=* { name '${mkgmap:boundary_name}' }
boundary=administrative { name '${mkgmap:boundary_name}' }
boundary=administrative & admin_level<3 [0x1e resolution 16]
boundary=administrative & admin_level<5 [0x1d resolution 16]
boundary=administrative & admin_level<7 [0x1c resolution 19]
boundary=administrative & admin_level<9 [0x1c resolution 21]
boundary=administrative [0x1c resolution 22 continue]
boundary=national [0x1e resolution 16]
boundary=political [0x1c resolution 16]

## Добавляем другие линии
## Заборы, стены
barrier=fence | barrier=hedge | barrier=wall [0x10f12 resolution 24 continue]
barrier=ditch	[0x1010a resolution 22]

## Канатная дорога
aerialway=cable_car  {name '${name} (${ref})' | '${name}' | '${ref}' } [0x10f00 resolution 22]
railway=funicular    {name '${name} (${ref})' | '${name}' | '${ref}' } [0x10f00 resolution 22]
aerialway=gondola    {name '${name} (${ref})' | '${name}' | '${ref}' } [0x10f01 resolution 22]
aerialway=mixed_lift {name '${name} (${ref})' | '${name}' | '${ref}' } [0x10f02 resolution 22]
aerialway=chair_lift {name '${name} (${ref})' | '${name}' | '${ref}' } [0x10f03 resolution 22]
aerialway=drag_lift  {name '${name} (${ref})' | '${name}' | '${ref}' } [0x10f04 resolution 22]
aerialway=*	[0x10f15 resolution 22]

## Горнолыжные трассы
piste:type=downhill & piste:difficulty=novice [0x10105 resolution 22]
piste:type=downhill & piste:difficulty=easy   [0x10102 resolution 22]
piste:type=downhill & piste:difficulty=intermediate [0x10103 resolution 22]
piste:type=downhill & piste:difficulty=advanced [0x10104 resolution 22]

# Границы заповедников и нацпарков
leisure=nature_reserve | leisure=natural_reserve | landuse=nature_reserve | landuse=natural_reserve | boundary=national_park | boundary=protected_area [0x10f1f resolution 21 continue]

# Резервации
(boundary=protected_area & protect_class=24) | boundary=aboriginal_lands [0x2a resolution 21 continue]

### Building Contours
#man_made=* & area=yes {delete name} [0x1010d resolution 24 continue]
#(building=* | bridge=yes & area=yes) {delete name} [0x1010d resolution 24 continue]
#tourism=attraction & building!=* & man_made!=* {delete name} [0x1010d resolution 24 continue]
#historic=ruins & building=yes {delete name} [0x1010d resolution 24 continue]
#man_made=* & area!=no
#   & (man_made!=door 
#   & man_made!=embankment 
#   & man_made!=breakwater
#   & man_made!=pier
#   & man_made!=cable_line 
#   & man_made!=cutline 
#   & man_made!=cutting
#   & man_made!=levee 
#   & man_made!=trench
#   & man_made!=wastewater_plant
#   & man_made!=surveillance
#   & man_made!=groyne 
#   & man_made!=waterway
#   & man_made!=reinforced_slope) {delete name} [0x1010d resolution 24 continue]
### Building Contours

include 'inc/water_lines';
include 'inc/contour_lines';

<finalize>
# The finalizer section is executed for each element when a rule with an element type matches

include 'inc/address';
# calculate the road speed based on maxspeed tag
include 'inc/roadspeed'; 
# calculate the access rules
include 'inc/access';

#limit artificial cycleways to resolution 24
mkgmap:synthesised=yes & mkgmap:bicycle=yes { set mkgmap:highest-resolution-only = true }

# don't add house numbers to unnamed or artifical bicycle ways
mkgmap:bicycle=yes & (mkgmap:foot=no & mkgmap:car=no & mkgmap:street!=* | mkgmap:synthesised=yes) {set mkgmap:numbers=false}

### Удаляем адреса с линий
  waterway=canal 	| waterway=river		| waterway=rapid 
| waterway=rapids 	| whitewater=rapid 		| whitewater=rapids 
| waterway=drain 	| waterway=stream 		
| (highway=path & name!=*)	
| (highway=footway & name!=*) 
| (highway=byway & name!=*) 
| (highway=pedestrian & name!=*)
| highway=cycleway
| highway=bridleway
  {set mkgmap:numbers=false}

# Display highway shield for mayor roads if they have a ref and make them searchable by their name
#USA
#(highway=motorway | highway=trunk) & ref=* & network~'US:.*'
#	{set ref='${ref|subst:[^0-9+]~>}'
#	 name '${ref|highway-symbol:shield} ${name}'; addlabel '${name}' }
#highway=primary & ref=* & network~'US:.*'
#	{set ref='${ref|subst:[^0-9+]~>}'
#	 name '${ref|highway-symbol:round} ${name}'; addlabel '${name}' }
#USA

#(highway=* | junction=*) & highway!=motorway & (highway=trunk & oneway!=yes) & name=* & ref=* & addr:place=* {delete ref}
(highway=* | junction=*) & highway!=motorway & highway!=trunk & name=* & ref=* & addr:place=* {delete ref}
(highway=motorway | highway=trunk) & ref=*
	{set ref='${ref|subst:[\s-]~>|subst:[;,]~>/}'
	 name '${ref|highway-symbol:hbox} ${name}'|'${ref|highway-symbol:hbox}'; addlabel '${name}' }
highway=primary & ref=*
	{set ref='${ref|subst:[\s-]~>|subst:[;,]~>/}'
	 name '${ref|highway-symbol:box} ${name}'|'${ref|highway-symbol:box}'; addlabel '${name}' }
(highway=secondary | highway=tertiary | highway=unclassified) & ref=*
	{set ref='${ref|subst:[\s-]~>|subst:[;,]~>/}'
	 name '${ref|highway-symbol:oval} ${name}'|'${ref|highway-symbol:oval}'; addlabel '${name}' }

name=* { name '${name}' }

highway=* & ref=* & highway!=motorway & highway!=trunk & highway!=primary & highway!=secondary & highway!=tertiary 
	{ set ref='${ref|subst:[\s-]~>|subst:[;]~>/}' addlabel '${ref}' }
#highway=* & ref=*     { addlabel '${ref}' }
highway=* & int_ref=* { set int_ref='${int_ref|subst:[\s-]~>|subst:[;,]~>/}' addlabel '${int_ref}' }
highway=* & nat_ref=* { set nat_ref='${nat_ref|subst:[\s-]~>|subst:[;,]~>/}' addlabel '${nat_ref}' }
highway=* & reg_ref=* { set reg_ref='${reg_ref|subst:[\s-]~>|subst:[;,]~>/}' addlabel '${reg_ref}' }
